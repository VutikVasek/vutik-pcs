@use "../global/styles" as s;

.navbar .order {
  text-decoration: underline;
  text-underline-offset: 5rem;
}
.title {
  display: flex;
  flex-direction: column;
  padding: 50rem 75rem;
  gap: 25rem;
}
.inline {
  display: flex;
  gap: 10rem;
  align-items: center;
}
.content {
  display: flex;
  width: 100%;
  position: relative;
  padding: 25rem;
  gap: 25rem;
  form {
    display: flex;
    flex-direction: column;
    gap: 25rem;
    width: 100%;
    background: rgba(s.$cyan, 0.4);
    padding: 25rem;
    border-radius: s.$roundness;
    box-shadow: s.$shadow;
    .pair {
      display: flex;
      flex-direction: column;
      gap: 10rem;
      label:not([class="switch"]) {
        width: fit-content;
      }
      input, textarea {
        background: rgba(white, 0.2);
        border: none;
        border-radius: calc(s.$roundness / 2.5);
        resize: none;
        font: s.$p;
        padding-left: 10rem;
        outline-width: 0.5px;
      }
      input {
        height: calc(2 * clamp(12px, 0.8vw, 25px));
        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }
        &[type=number] {
          width: 10vmax;
          appearance: none;
          -moz-appearance: textfield;
        }
        &:-webkit-autofill,
        &:-webkit-autofill:hover, 
        &:-webkit-autofill:focus, 
        &:-webkit-autofill:active{
            -webkit-background-clip: text;
            -webkit-text-fill-color: #ffffff;
            transition: background-color 5000s ease-in-out 0s;
            box-shadow: inset 0 0 20px 20px rgba(white, 0.2);
        }
        &:user-invalid {
          box-shadow: 0 0 0 2rem red;
        }
      }
      textarea {
        //height: calc(2.55 * clamp(12px, 0.8vw, 25px) + 20rem);
        //height: fit-content;
        padding-top: 10rem;
        //padding-left: 10rem;
      }
      .radios {
        display: flex;
        gap: 10rem;
      }
    }
    button {
      text-align: center;
      font: s.$button;
      padding: 20rem 40rem;
      border-radius: s.$roundness;
      border: 3rem solid transparent;
      color: s.$text;
      // transition: 1s linear;
      position: relative;
      width: fit-content;

      --tint: 50%;
      background: 
        //background:
        linear-gradient(rgba(s.$background, var(--tint)), rgba(s.$background, var(--tint))),
        linear-gradient(s.$background calc(var(--tint) - 50%), transparent),
        linear-gradient(100deg, s.$pink, s.$light-blue),
        //border:
        
        linear-gradient(rgba(s.$background, calc(var(--tint) + 40%)), transparent),
        linear-gradient(100deg, s.$pink, s.$light-blue);
      box-shadow: inset 0 0 30rem rgba(s.$blue, 0.25);
      background-clip: padding-box, padding-box, padding-box, border-box, border-box;
      background-origin: border-box;
    }
  }

  .pc-showcase {
    width: 100%;
    flex-grow: 1;
    border-radius: s.$roundness;
    position: relative;
    overflow: clip;
    background: rgba(black, 0.5);
    box-shadow: s.$shadow;
    cursor: pointer;
    & > img, h2, & > a {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      font-size: 100rem;
      color: white;
    }
    h2 {
      top: 35%;
    }
    & > a {
      font: s.$h3;
      top: 90%;
    }
    & > img {
      filter: invert(100%);
      height: 70rem;
      width: 70rem;
    }
    .gallery {
      width: 130%;
      height: 130%;
      position: absolute;
      border-radius: s.$roundness;
      left: -15%;
      top: -15%;

      display: flex;
      flex-wrap: wrap;  
      gap: 20rem;
      
      z-index: -1;
      
      .spacer {
        width:  10rem;
        height:  calc(20% - 20rem);
      }
      
      .tile {
        width:  calc(20% - 40rem);
        height:  calc(20% - 20rem);
        
        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          border-radius: 10rem;
          background: rgba(black, 0.5);
        }
      }
    }
  }
}


//W3S TOGGLE SLIDER SWITCH
/* The switch - the box around the slider */
$size: max(1.5px, 1.5rem);
.switch {
  position: relative;
  display: inline-block;
  width: calc(30 * $size);
  height: calc(17 * $size);   
}
  
  /* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(white, 0.2);
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: calc(13 * $size);
  width: calc(13 * $size);
  left: calc(2 * $size);
  bottom: calc(2 * $size);
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: s.$cyan;
}

input:focus + .slider {
  box-shadow: 0 0 calc(1 * $size) s.$cyan;
}

input:checked + .slider:before {
  -webkit-transform: translateX(calc(13 * $size));
  -ms-transform: translateX(calc(13 * $size));
  transform: translateX(calc(13 * $size));
}

/* Rounded sliders */
.slider.round {
  border-radius: calc(17 * $size);
}

.slider.round:before {
  border-radius: 50%;
}





@media screen and (max-aspect-ratio: 1/1) {
  .content {
    flex-direction: column;
    height: 120vh;
    .pc-showcase {
      height: 100%;
      width: 100%;
    }
  }
}